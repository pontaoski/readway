<header class="header">
    <nav class="navbar">
        <ol class="breadcrumb navbar-nav">
            <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarsExampleDefault"
                aria-controls="navbarsExampleDefault" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <li class="breadcrumb-link">
                <a href="#">ReadWay Protocol Browser</a>
            </li>
        </ol>
    </nav>
</header>

<aside class="sidebar">
    <div id="sidebar-header" class="menu-box">
        <div class="menu-title">
            <h2>ReadWay</h2>
        </div>
    </div>
    <div class="menu-box">
        <ul>
            <li><h4><a href="wayland.html">wayland</a></h4></li>
            Stable:
            {{ range $proto := .Stable }}
                <li><a href="{{ $proto.Name }}.html">{{ $proto.Name }}</a></li>
            {{ end }}
            <br>
            Unstable:
            {{ range $proto := .Unstable }}
            <li><a href="{{ $proto.Name }}.html">{{ $proto.Name }}</a></li>
            {{ end }}
            <br>
            Plasma:
            {{ range $proto := .Plasma }}
            <li><a href="{{ $proto.Name }}.html">{{ $proto.Name }}</a></li>
            {{ end }}
            <br>
        </ul>
    </div>
</aside>

<script>
    const go = new Go();
    WebAssembly.instantiateStreaming(fetch("main.wasm"), go.importObject).then((result) => {
        go.run(result.instance)
        console.log(render("yeet"))
    });
    var reader = new FileReader();
    reader.onload = function(event) {
        let result = render(event.target.result)
        history.pushState({}, null, "/custom")
        document.open()
        document.write(result)
        document.close()
    }
    function dropHandler(ev) {
        ev.preventDefault()
        if (ev.dataTransfer.items) {
            item = ev.dataTransfer.items[0].getAsFile()
            reader.readAsText(item)
        } else {
            item = ev.dataTransfer.files[0]
            reader.readAsText(item)
        }
    }
    function dragOverHandler(ev) {
        ev.preventDefault()
    }
</script>

<article class="content">
<h1>ReadWay <small class="text-muted">protocol browser</small></h1>
<p class="lead" ondrop="dropHandler(event)" ondragover="dragOverHandler(event)">
    Why read XML when you can read something with curated typography and colours? <br>
    Something special might happen when you drag an XML file onto this paragraph.
</p>

<h2><a href="wayland.html">Base Wayland Protocol</a></h2>

<h2>Stable Protocols</h2>
<ul class="list-group">
{{ range $proto := .Stable }}
<li class="list-group-item"><a href="{{ $proto.Name }}.html">{{ $proto.Name }}</a></li>
{{ end }}
</ul>

<h2>Unstable Protocols</h2>
<ul class="list-group">
{{ range $proto := .Unstable }}
<li class="list-group-item"><a href="{{ $proto.Name }}.html">{{ $proto.Name }}</a></li>
{{ end }}
</ul>

<h2>Plasma Protocols</h2>
<ul class="list-group">
{{ range $proto := .Plasma }}
<li class="list-group-item"><a href="{{ $proto.Name }}.html">{{ $proto.Name }}</a></li>
{{ end }}
</ul>

</article>

<br>